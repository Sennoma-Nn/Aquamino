local T=require'framework/tableExtend'

local block={
    --四连
    Z={{0,0},{ 1, 0},{-1, 1},{ 0, 1}},
    S={{0,0},{-1, 0},{ 1, 1},{ 0, 1}},
    J={{0,0},{-1, 0},{ 1, 0},{-1, 1}},
    L={{0,0},{-1, 0},{ 1, 0},{ 1, 1}},
    T={{0,0},{-1, 0},{ 1, 0},{ 0, 1}},
    O={{.5,.5},{.5,-.5},{-.5,.5},{-.5,-.5}},
    I={{-1.5,.5},{-.5,.5},{.5,.5},{1.5,.5}},

    --五连
    Z5={{0,0},{ 0,-1},{ 1,-1},{-1, 1},{ 0, 1}},
    S5={{0,0},{ 0,-1},{-1,-1},{ 1, 1},{ 0, 1}},
    J5={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{-1.5,.5}},
    L5={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{ 1.5,.5}},
    T5={{0,0},{-1,-1},{ 0,-1},{ 1,-1},{ 0, 1}},
    I5={{0,0},{-2, 0},{-1, 0},{ 1, 0},{ 2, 0}},
    P ={{0,0},{-1, 0},{ 1, 0},{ 0, 1},{-1, 1}},
    Q ={{0,0},{-1, 0},{ 1, 0},{ 0, 1},{ 1, 1}},
    N ={{-1.5,.5},{-.5,.5},{-.5,-.5},{ .5,-.5},{ 1.5,-.5}},
    H ={{ 1.5,.5},{ .5,.5},{ .5,-.5},{-.5,-.5},{-1.5,-.5}},
    F ={{0,0},{-1, 0},{ 1, 0},{ 0,-1},{-1, 1}},
    E ={{0,0},{-1, 0},{ 1, 0},{ 0,-1},{ 1, 1}},
    R ={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{-.5,.5}},
    Y ={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{ .5,.5}},
    X ={{0,0},{ 0, 1},{ 1, 0},{ 0,-1},{-1, 0}},
    W ={{0,0},{ 0,-1},{-1,-1},{ 1, 0},{ 1, 1}},
    V ={{-1,-1},{ 0,-1},{ 1,-1},{ 1, 0},{ 1, 1}},
    U ={{0,0},{-1, 0},{ 1, 0},{-1, 1},{ 1, 1}},

    --六连，仅限中心对称与简单六连
    I6={{-2.5,.5},{-1.5,.5},{-.5,.5},{.5,.5},{1.5,.5},{2.5,.5}},
    U6={{-1.5,.5},{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{1.5,.5}},
    T6={{0,0},{-1,-1},{ 0,-1},{ 1,-1},{ 0, 1},{ 0, 2}},
    O6={{0,0},{-1, 0},{ 1, 0},{-1, 1},{ 0, 1},{ 1, 1}},
    wT={{0,0},{-2, 0},{-1, 0},{ 1, 0},{ 2, 0},{ 0, 1}},
    Ht={{-.5,.5},{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{.5,.5}},
    XT={{0,0},{-1, 0},{ 1, 0},{ 0,-1},{ 0, 1},{ 0, 2}},
    Tr={{0,0},{-1,-1},{ 0,-1},{ 1,-1},{ 1, 0},{ 1, 1}},
    A ={{0,0},{ 0, 1},{ 1, 0},{-1, 0},{-1,-1},{ 1,-1}},
    Pl={{0,0},{ 0, 1},{ 1, 0},{-1, 0},{-1,-1},{ 0,-1}},

    OZ={{0,0},{-1, 0},{ 1, 0},{ 0, 1},{ 1, 1},{-1,-1}},
    OS={{0,0},{-1, 0},{ 1, 0},{ 0, 1},{-1, 1},{ 1,-1}},
    bZ={{-1.5,.5},{-.5,.5},{ .5,.5},{-.5,-.5},{ .5,-.5},{ 1.5,-.5}},
    bS={{ 1.5,.5},{ .5,.5},{-.5,.5},{ .5,-.5},{-.5,-.5},{-1.5,-.5}},
    TZ={{0,0},{-1, 0},{ 1, 0},{ 0,-1},{ 1,-1},{ 1, 1}},
    TS={{0,0},{-1, 0},{ 1, 0},{-1,-1},{ 0,-1},{-1, 1}},

    lSt={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{-.5,.5},{-1.5,.5}},
    rSt={{-1.5,-.5},{-.5,-.5},{.5,-.5},{1.5,-.5},{ .5,.5},{ 1.5,.5}},
    rHk={{-1.5,.5},{-.5,.5},{ .5,.5},{-1.5,-.5},{ .5,-.5},{ 1.5,-.5}},
    lHk={{ 1.5,.5},{ .5,.5},{-.5,.5},{ 1.5,-.5},{-.5,-.5},{-1.5,-.5}},
}

function block.rotate(b,o,mode)--旋转，mode='R'是顺时针 'L'是逆时针 'F'是180
    for i=1,#b do
        if     mode=='F' then  b[i][1],b[i][2]=b[i][1]*-1,b[i][2]*-1
        elseif mode=='R' then  b[i][1],b[i][2]=b[i][2]   ,b[i][1]*-1
        elseif mode=='L' then  b[i][1],b[i][2]=b[i][2]*-1,b[i][1]
        end
    end
    o=(o+(mode=='R' and 1 or mode=='L' and -1 or 2))%4 return o
end
function block.antiRotate(b,o,mode)--反方向旋转
    for i=1,#b do
        if     mode=='F' then  b[i][1],b[i][2]=b[i][1]*-1,b[i][2]*-1
        elseif mode=='R' then  b[i][1],b[i][2]=b[i][2]*-1,b[i][1]
        elseif mode=='L' then  b[i][1],b[i][2]=b[i][2]   ,b[i][1]*-1
        end
    end
    o=(o+(mode=='R' and -1 or mode=='L' and 1 or 2))%4 return o
end

function block.flipH(b) --水平翻转
    for i=1,#b do b[i][1]=b[i][1]*(-1) end
end
function block.flipH(b) --竖直翻转
    for i=1,#b do b[i][2]=b[i][2]*(-1) end
end

function block.size(b)--计算方块最小外包框大小以及旋转中心相对这个框的偏移
    local xMiao,xmax,yMiao,ymax=b[1][1],b[1][1],b[1][2],b[1][2]
    for i=1,#b do
        if b[i][1]<xMiao then xMiao=b[i][1] end
        if b[i][1]>xmax  then xmax =b[i][1] end
        if b[i][2]<yMiao then yMiao=b[i][2] end
        if b[i][2]>ymax  then ymax =b[i][2] end
    end
    return xmax-xMiao+1,ymax-yMiao+1,-(xmax+xMiao)/2,-(ymax+yMiao)/2--宽，高，x偏移，y偏移
end
function block.edge(b)--获取最边缘的方块信息
    local xMiao,xmax,yMiao,ymax=b[1][1],b[1][1],b[1][2],b[1][2]
    for i=1,#b do
        if b[i][1]<xMiao then xMiao=b[i][1] end
        if b[i][1]>xmax  then xmax =b[i][1] end
        if b[i][2]<yMiao then yMiao=b[i][2] end
        if b[i][2]>ymax  then ymax =b[i][2] end
    end
    return xMiao,xmax,yMiao,ymax
end
function block.getX(b)
    local n={}
    for i=1,#b do
        if not T.include(n,b[i][1]) then table.insert(n,b[i][1]) end
    end
    return n
end
function block.giant(b)--使方块巨大化并带上giant标签
    local gb={}
    local m,n
    for i=1,#b do
        for j=0,3 do
            m=j%2-.5 n=j/2<1 and -.5 or .5
            gb[#gb+1]={2*b[i][1]+m,2*b[i][2]+n}
        end
    end
    gb.sz='giant'
    return gb
end

return block